<div class="my-5">
    <h1 class="text-center mb-5">댓글 관리</h1>
    <div id="div_insert" style="display: none;">
        <textarea id="txt_body" class="form-control" rows="5" placeholder="내용을 입력하세요."></textarea>
        <div class="text-end mt-3">
            <button id="btn-insert" class="btn btn-primary btn-sm px-5">등록</button>
        </div>
    </div>
    <div id="div_login">
        <button id="btn-login" class="btn btn-primary w-100">로그인</button>
    </div>
    <div class="mt-3">
        <div>
            댓글 수 : <span id="total"></span>
        </div>
    </div>
    <div id="div_comments"></div>
    <div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>

<script id="temp_comments" type="x-handlebars-template">
    {{#each .}}
        <div>
            <div>
                <small><b>{{email}}</b></small>
                <small>{{date}}</small>
            </div>
            <div class="view{{id}}">
                <div class="ellipsis2">{{body}}</div>
                <div class="text-end mt-3" style="{{fn_button email}}">
                    <button class="btn btn-update btn-sm btn-success" id="{{id}}">수정</button>
                    <button class="btn btn-delete btn-sm btn-danger" id="{{id}}">삭제</button>
                </div>
            </div>
            <div class="edit{{id}}" style="display:none;">
                <div><textarea class="body form-control" rows="5">{{body}}</textarea></div>
                <div class="text-end mt-3">
                    <button class="btn btn-save btn-sm btn-success" id={{id}}>저장</button>
                    <button class="btn btn-cancel btn-sm btn-danger" id="{{id}}">취소</button>
                </div>
            </div>
        </div>
        <hr>
    {{/each}}

</script>

<script>
    Handlebars.registerHelper("fn_button", function(email){
        if(sessionStorage.getItem("email") != email){
            return "display:none";
        } else {
            return "display:block";
        }
    });
</script>
<script type="module">
    import { app } from "/javascripts/firebase.js";
    import { getFirestore, collection, doc, addDoc, getDoc, deleteDoc } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    import { query,orderBy,getDocs, setDoc, where } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    const db = getFirestore(app);
    
    let total = 0;
    const size = 3;
    let page = 1;

    const pid = "<%=id%>";
    if(sessionStorage.getItem("email")){
        $("#div_insert, #div_login").toggle();
    }

    $("#div_comments").on("click", ".btn-delete", async function(){
        const id = $(this).attr('id');
        if(confirm("해당 댓글을 삭제하시겠습니까?")){
            await deleteDoc(doc(db, `/comments/${id}`));
            alert('삭제 성공');
            getComments();
        }
    });

    $("#div_comments").on("click", ".btn-update", async function(){
        const id = $(this).attr('id');
        $("#div_comments .view" + id).hide();
        $("#div_comments .edit" + id).fadeIn(300);
    });

    $("#div_comments").on("click", ".btn-cancel", async function(){
        const id = $(this).attr('id');
        $("#div_comments .edit" + id).hide();
        $("#div_comments .view" + id).fadeIn(300);
    });

    $("#div_comments").on("click", ".btn-save", async function(){
        const id = $(this).attr('id');
        const edit = $(this).parent().parent();
        const body = edit.find(".body").val();
        
        if(confirm("해당 댓글을 수정하시겠습니까?")){
            const snapshot = await getDoc(doc(db, `comments/${id}`));
            //수정 전 데이터 : console.log(snapshot.data()); 

            await setDoc(doc(db, `comments/${id}`), {...snapshot.data(), body});
            alert('수정 완료 되었습니다.');
            getComments();
        }
    });
    

    

    $("#btn-login").on('click', function(){
        sessionStorage.setItem("target", `/posts/read?id=${pid}`);
        location.href = '/users/login';
    });

    $("#btn-insert").on('click', async function(){
        const body = $("#txt_body").val();
        const date = moment(new Date()).format("YYYY-MM-DD HH:mm:ss");
        const email = sessionStorage.getItem("email");
        const data = {pid, email, body, date};
        if(body == ""){
            alert("댓글 내용을 입력해 주세요.");
            $("#txt_body").focus();
        } else {
            await addDoc(collection(db, 'comments'), data);
            alert("댓글 등록이 완료되었습니다.");
            $("#txt_body").val("");
            getComments();
        }
    });

    getComments();
    async function getComments(){
        const q = query(collection(db, 'comments'), where("pid", "==", pid), orderBy("date", "desc"));
        const snapshot = await getDocs(q);
        // const total = snapshot.docs.length;

        // 전체 페이지 수 구하기
        if(total != snapshot.docs.length) {
            total = snapshot.docs.length;
            const totalPages = Math.ceil(total/size);
            $("#pagination").twbsPagination("changeTotalPages", totalPages, 1);
        }

        
        $("#total").html(total);

        let rows = [];
        snapshot.docs.forEach((doc, index) => {
            const start = (page - 1) * size; // 0
            const end = (page * size) - 1; // 2
            if(index >= start && index <= end){
                const data = {id:doc.id, ...doc.data()};
                // console.log(data);
                rows.push(data);
            }
        });


        console.log(rows);

        const temp = Handlebars.compile($("#temp_comments").html());
        $("#div_comments").html(temp(rows));
    }

    $('#pagination').twbsPagination({
        totalPages:10, //총 페이지 번호 수
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
        startPage : 1, // 시작 시 표시되는 현재 페이지
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
        first : '<<', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
        prev : '<', // 이전 페이지 버튼에 쓰여 있는 텍스트
        next : '>', // 다음 페이지 버튼에 쓰여 있는 텍스트
        last : '>>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
        onPageClick: function (event, clickPage) {
            page=clickPage;
            getComments(); 
        }
    });
</script>